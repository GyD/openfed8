<?php
/**
 * @file
 * Contains install and update functions for Openfed Administration.
 */

/**
 * Implements hook_install().
 */
function openfed_administration_install() {
  // Discover all the module configurations that we'll use to override existing
  // ones.
  $module = basename(__FILE__, '.install');
  $module_configs = \Drupal::configFactory()->listAll($module);

  // Overriding existing configurations.
  if (!empty($module_configs)) {
    foreach ($module_configs as $module_config_name) {
      $config = \Drupal::configFactory()->getEditable($module_config_name);
      // All the configurations set in this module starting with the module name
      // are overrides of the an already existing config. Here we'll get the
      // exiting config name.
      $existing_config = str_replace($module . '.', '', $module_config_name);
      $existing_config = \Drupal::configFactory()->getEditable($existing_config);
      $existing_config->setData($config->get())->save();
      // We don't need to keep this config.
      $config->delete();
    }
  }
}

/**
 * Implements hook_update_dependencies().
 */
function openfed_update_dependencies() {
  $dependencies = [];

  // Ensure that media_entity_update_8201() runs before the openfed update.
  $dependencies['openfed'][8601] = [
    'media_entity' => 8201
  ];

  return $dependencies;
}

/**
 * Formely updated configs related to core.base_field_override.media.* with the new
 * default_value_callback when upgrading from 8.5.x to 8.6.x, since media is now
 * part of the core.
 */
function openfed_update_8601(&$sandbox) {
  // Gets the Config Factory service.
  $config_factory = \Drupal::configFactory();
  // Gets the list of media entity bundles.
  /** @var \Drupal\Core\Entity\EntityTypeBundleInfo $media_bundles_info */
  $media_bundles_info = \Drupal::service('entity_type.bundle.info')->getBundleInfo('media');

  // Make sure there are media bundles.
  if (!empty($media_bundles_info)) {

    foreach (array_keys($media_bundles_info) as $bundle_name) {

      // Make sure the configuration exists.
      if (in_array("core.base_field_override.media.{$bundle_name}.uid", $config_factory->listAll("core.base_field_override.media"))) {
        // Gets the editable configuration.
        $config = $config_factory->getEditable("core.base_field_override.media.{$bundle_name}.uid");
        // Sets the new default_value_callback method.
        $config->set('default_value_callback', 'Drupal\media\Entity\Media::getCurrentUserId');
        // Saves the configuration.
        $config->save(TRUE);
      }
    }
  }
}
